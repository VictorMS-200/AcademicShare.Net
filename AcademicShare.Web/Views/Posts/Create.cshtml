@model GetPostDto

@{
    ViewData["Title"] = "Create";
}

<div>
    <h1 class="display-4">Create a Posts</h1>
    <p class="lead">
        Create a new post. Here you can create a new post with a title, content, image and teacher.
    </p>
</div>

<div class="row">
    <div class="col-md-4">
        @using(Html.BeginForm("Create", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="col-sm-4">
                <label asp-for="Title" class="control-label"></label>
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
            </div>

            <div class="col-sm-4">
                <label asp-for="Content" class="control-label"></label>
                @Html.TextBoxFor(m => m.Content, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Content, "", new { @class = "text-danger" })
            </div>

            <div class="col-sm-4">
                <label asp-for="Image" class="control-label"></label>
                @Html.TextBoxFor(m => m.Image, new { @class = "form-control", type = "file" })
                @Html.ValidationMessageFor(m => m.Image, "", new { @class = "text-danger" })
            </div>

            <div class="col-sm-4">
                <label asp-for="Teacher" class="control-label"></label>
                @Html.TextBoxFor(m => m.Teacher, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Teacher, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
