@model PaginatedList<AcademicShare.Web.Models.Post>
@inject AcademicShareDbContext _context
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Posts";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
@section Styles {
    <link rel="stylesheet" href="~/css/Posts.css">
}

<div>
    <h1 class="display-4">Posts</h1>
    <p class="lead">Welcome to the posts page. Here you can see all the posts that have been created by the users.</p>
</div>

<form asp-controller="Posts" asp-action="Index" method="get">
    <div class="justify-content-start align-content-center d-flex mt-4">
        <div class="form-floating col-md-5">
            <input type="search" class="form-control" name="SearchString" id="floatingInput"
                placeholder="name@example.com">
            <label>Search title</label>
        </div>
        <input class="btn btn-primary mx-2 m-auto" type="submit" value="Filter" />
    </div>
</form>
<div class="d-flex justify-content-start mt-4">
    <a asp-action="Create" asp-controller="Posts">
        <button class="btn btn-primary" type="submit">
            Make a Post
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil"
                viewBox="0 0 16 16">
                <path
                    d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325" />
            </svg>
        </button>
    </a>
    <a asp-controller="Profile" asp-action="Index" asp-route-UserName="@ViewBag.User.UserName">
        <button class="btn btn-primary mx-3" type="submit">
            View Profile
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                class="bi bi-person-vcard" viewBox="0 0 16 16">
                <path
                    d="M5 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4m4-2.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5M9 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4A.5.5 0 0 1 9 8m1 2.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5" />
                <path
                    d="M2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2zM1 4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H8.96q.04-.245.04-.5C9 10.567 7.21 9 5 9c-2.086 0-3.8 1.398-3.984 3.181A1 1 0 0 1 1 12z" />
            </svg>
        </button>
    </a>
</div>
<hr>
<div class="row row-cols-1 row-cols-md-2 g-4">
    @foreach (var item in Model)
    {
        <div class="col">
            <div class="card h-100">
                <img src="imagesPost/@Html.DisplayFor(modelItem => item.Image)" class="card-img-top"
                    alt="@Html.DisplayFor(modelItem => item.Title)">
                <div class="card-body">
                    <div class="d-inline-flex w-100 m-auto">
                        <img src="imagesProfile/avatar/@_context.Profiles.FirstOrDefault(u => u.UserId == item.UserId).ProfilePicture"
                            alt="" class="rounded-circle me-2" style="width: 55px; height: 55px; object-fit: cover;">
                        <div class="align-content-center">
                            <p class="card-text mx-1 mb-0" style="font-size: large;">@Html.DisplayFor(modelItem =>
                            _context.Profiles.FirstOrDefault(u => u.UserId == item.UserId!).FullName)</p>
                            <p class="card-text mx-1 mb-0 text-muted" style="font-size: medium;">#@Html.DisplayFor(modelItem
                            =>
                            _context.Users.FirstOrDefault(u => u.Id == item.UserId!).UserName)</p>
                        </div>
                    </div>
                    <hr>
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                    <p class="card-text text-break">@Html.DisplayFor(modelItem => item.Content)</p>
                    <p class="card-text text-muted mb-0">Teacher: @Html.DisplayFor(modelItem =>
                    item.Teacher)</p>
                    <p class="card-text"><small class="text-muted">@Html.DisplayFor(modelItem => item.CreatedAt)</small></p>
                    <a asp-action="ViewPost" asp-controller="Posts" asp-route-id="@item.PostId" class="btn btn-primary">View
                        the content</a>
                    <div class="d-flex align-content-center mx-1 mt-3">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"
                            class="bi bi-chat" viewBox="0 0 16 16">
                            <path
                                d="M2.678 11.894a1 1 0 0 1 .287.801 11 11 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8 8 0 0 0 8 14c3.996 0 7-2.807 7-6s-3.004-6-7-6-7 2.808-7 6c0 1.468.617 2.83 1.678 3.894m-.493 3.905a22 22 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a10 10 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9 9 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105" />
                        </svg>
                        <p class="mb-0 mx-2">@_context.Comments.Where(c => c.PostCommentId == item.PostId).OrderByDescending(c =>
                                    c.CreatedAt).ToList().Count()</p>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (Model.Count() == 0)
    {
        <p>No data found</p>
    }
</div>
<div class="mt-5 justify-content-center d-flex ">
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-primary m-2 @prevDisabled">
        Previous
    </a>

    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn btn-primary m-2 @nextDisabled">
        Next
    </a>
</div>
