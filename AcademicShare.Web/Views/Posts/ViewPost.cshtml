@model ViewPostDto

@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore

@inject AcademicShareDbContext _context
@inject SignInManager<User> SignInManager

@{
    ViewBag.Title = "Post";
    ViewData["Title"] = "Post " + Model.PostTitle;
    var user = _context.Users.Find(Model.UserId);
    var ListComment = await _context.Comments.Where(c => c.Post.PostId.Equals(Model.PostId)).OrderByDescending(c =>
    c.CreatedAt).ToListAsync();
}
@section Styles {
    <link rel="stylesheet" href="~/css/Posts.css">
}


<div class="col-md-8 offset-md-2">
    <h1 class="display-4">@Html.DisplayFor(modelItem => Model.PostTitle)</h1>
    <img src="/imagesPost/@Html.DisplayFor(modelItem => Model.PostImage)" class="rounded-bottom w-100"
        alt="@Html.DisplayFor(modelItem => Model.PostTitle)">
    <div class="d-flex justify-content-start rounded my-2 p-0" style="background-color: rgb(212, 233, 252);">
        <div class="w-50 my-3 d-inline-flex m-4">
            <img src="/imagesProfile/avatar/@_context.Profiles.FirstOrDefault(u => u.User.Id.Equals(Model.UserId!)).ProfilePicture"
                alt="" class="rounded-circle me-2" style="width: 55px; height: 55px; object-fit: cover;">
            <div class="align-content-center">
                <p class="card-text mx-1 mb-0" style="font-size: large;">
                    @Html.DisplayFor(modelItem => _context.Profiles.FirstOrDefault(u => u.User.Id ==
                             Model.UserId!).FullName)
                </p>
                <p class="card-text mx-1 mb-0 text-muted" style="font-size: medium;">
                    #@Html.DisplayFor(modelItem => _context.Users.FirstOrDefault(u => u.Id ==
                            Model.UserId).UserName)
                </p>
            </div>
        </div>
    </div>
    <p class="mb-2">@Html.Raw(Model.PostContent)</p>
    <p class="text-muted mt-2">Posted on: @Html.DisplayFor(modelItem => Model.CreatedAt)</p>
    <div class="d-inline-flex my-2">
        @using (Html.BeginForm("IndexLike", "Posts", new { id = Model.PostId }, FormMethod.Post))
        {
            @Html.HiddenFor(model => model.PostId)
            @Html.HiddenFor(model => model.UserId)
            <button type="submit" class="btn btn-link text-decoration-none text-dark p-0">
                @if (_context.Likes.FirstOrDefault(l => l.User.Id == SignInManager.UserManager.GetUserId(User) &&
               l.Post.PostId.Equals(Model.PostId)) == null)
                {
                    <i class="fa-regular fa-star fa-lg"></i>
                }
                else
                {
                    <i class="fa-solid fa-star fa-lg"></i>
                }
                <p class="mb-0 align-content-center">Like @_context.Likes.Where(c =>
                    c.Post.PostId.Equals(Model.PostId)).ToList().Count()</p>
            </button>
        }
    </div>
    <hr>
    @using (Html.BeginForm("ViewPost", "Posts", new { id = Model.PostId }, FormMethod.Post))
    {
        <div class="mb-3">
            <input type="hidden" asp-for="PostId" />
            <label asp-for="CommentContent" class="form-label">Comment in the post:</label>
            <textarea asp-for="CommentContent" class="form-control" rows="3"></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    }

    @if (ListComment != null)
    {
        foreach (var comment in ListComment)
        {
            <div class="col rounded my-3 p-2" style="background-color: rgb(242, 246, 248);">
                <div class="d-inline-flex w-100 m-auto">
                    <div class="w-100 my-3 d-inline-flex m-4">
                        <img src="/imagesProfile/avatar/@_context.Profiles.FirstOrDefault(u => u.User.Id == comment.User.Id!).ProfilePicture"
                            alt="/imagesProfile/avatar/@_context.Profiles.FirstOrDefault(u => u.User.Id == comment.User.Id!).ProfilePicture"
                            class="rounded-circle me-2" style="width: 55px; height: 55px; object-fit: cover;">
                        <div class="align-content-center">
                            <p class="card-text mx-1 mb-0" style="font-size: large;">
                                @Html.DisplayFor(modelItem => _context.Profiles.FirstOrDefault(u => u.User.Id ==
                                         comment.User.Id!).FullName)
                            </p>
                            <p class="card-text mx-1 mb-0 text-muted" style="font-size: medium;">
                                #@Html.DisplayFor(modelItem => _context.Users.FirstOrDefault(u => u.Id ==
                                        comment.User.Id!).UserName)
                            </p>
                        </div>
                    </div>
                </div>
                <div class="mx-5">
                    <p class="mx-5 pb-2 text-muted">@comment.Content</p>
                    <p class="text-muted mx-5 mb-2">Posted on: @comment.CreatedAt</p>
                </div>
            </div>
        }
    }
</div>