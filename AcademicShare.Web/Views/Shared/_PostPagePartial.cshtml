@model PaginatedList<Post>

@using Microsoft.AspNetCore.Identity

@inject AcademicShareDbContext _context
@inject SignInManager<User> SignInManager

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="row row-cols-1 row-cols-md-2 g-4">
    @foreach (var item in Model)
    {
        <div class="col">
            <div class="card h-100">
                <img src="/imagesPost/@Html.DisplayFor(modelItem => item.Image)" class="card-img-top" alt="@Html.DisplayFor(modelItem => item.Title)">
                <div class="card-body">
                    <div class="d-inline-flex w-100 m-auto">
                        <img src="/imagesProfile/avatar/@_context.Profiles.FirstOrDefault(u => u.User.Id.Equals(item.Posts.Id)).ProfilePicture"
                            alt="" class="rounded-circle me-2" style="width: 55px; height: 55px; object-fit: cover;">
                        <div class="align-content-center">
                            <p class="card-text mx-1 mb-0" style="font-size: large;">@Html.DisplayFor(modelItem =>
                            _context.Profiles.FirstOrDefault(u => u.User.Id.Equals(item.Posts.Id!)).FullName)</p>
                            <p class="card-text mx-1 mb-0 text-muted" style="font-size: medium;">#@Html.DisplayFor(
                                modelItem => _context.Users.FirstOrDefault(u => u.Id == item.Posts.Id!).UserName)</p>
                        </div>
                    </div>
                    <hr>
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                    <p class="card-text text-break">@Html.DisplayFor(modelItem => item.Resume)</p>
                    <p class="card-text text-muted mb-0">Teacher: @Html.DisplayFor(modelItem =>
                    item.Teacher)</p>
                    <p class="card-text"><small class="text-muted">@Html.DisplayFor(modelItem => item.CreatedAt)</small></p>
                    <a asp-action="ViewPost" asp-controller="Posts" asp-route-id="@item.PostId" class="btn btn-primary">View
                        the content
                    </a>
                    <div class="d-flex align-content-center mx-1 mt-3">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"
                            class="bi bi-chat" viewBox="0 0 16 16">
                            <path
                                d="M2.678 11.894a1 1 0 0 1 .287.801 11 11 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8 8 0 0 0 8 14c3.996 0 7-2.807 7-6s-3.004-6-7-6-7 2.808-7 6c0 1.468.617 2.83 1.678 3.894m-.493 3.905a22 22 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a10 10 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9 9 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105" />
                        </svg>
                        <p class="mb-0 mx-2">
                            @_context.Comments.Where(c => c.Post.PostId == item.PostId).ToList().Count()
                        </p>
                        @if (_context.Likes.FirstOrDefault(l => l.User.Id == SignInManager.UserManager.GetUserId(User) &&
                       l.Post.PostId == item.PostId) == null)
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"
                                class="bi bi-star ms-2" viewBox="0 0 16 16">
                                <path
                                    d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z" />
                            </svg>
                        }
                        else
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"
                                class="bi bi-star-fill" viewBox="0 0 16 16">
                                <path
                                    d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
                            </svg>
                        }
                        <p class="mb-0 mx-2">
                            @_context.Likes.Where(c => c.Post.PostId == item.PostId).ToList().Count()
                        </p>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (Model.Count() == 0)
    {
        <p>No data found</p>
    }
</div>
<div class="mt-5 justify-content-center d-flex ">
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-primary m-2 @prevDisabled">
        Previous
    </a>

    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn btn-primary m-2 @nextDisabled">
        Next
    </a>
</div>